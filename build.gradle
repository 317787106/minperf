group = 'io.github.317787106'
version = '0.1'

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.github.gradle-nexus:publish-plugin:1.1.0"
    }
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'application'

mainClassName = 'org.minperf.hash.HashPerformanceTest'

repositories {
    mavenLocal()
    maven {
        url "https://cdn.lfrs.sl/repository.liferay.com/nexus/content/groups/public"
    }
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    mavenCentral()
}

buildscript {
    repositories {
        mavenLocal()
        maven {
            url "https://cdn.lfrs.sl/repository.liferay.com/nexus/content/groups/public"
        }
        mavenCentral()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.9.1'
    }
}

dependencies {
    testImplementation 'junit:junit:4.13.1'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

dependencies {
    testImplementation 'junit:junit:4.13.1'
}

shadowJar {
    baseName = 'minperf'
    classifier = null
    version = null
    zip64 = true
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    [compileJava]*.options*.encoding = 'UTF-8'
}
compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    [compileTestJava]*.options*.encoding = 'UTF-8'
}

tasks.register('sourcesJar', Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allJava
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

tasks.register('javadocJar', Jar) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

javadoc {
    description = "Generates project-level javadoc for use in -javadoc jar"

    options.memberLevel = JavadocMemberLevel.PROTECTED
    options.author = true
    options.version = true
    options.header = project.name
    options.addStringOption('Xdoclint:none', '-quiet')

    // suppress warnings due to cross-module @see and @link references;
    // note that global 'api' task does display all warnings.
    logging.captureStandardError LogLevel.INFO
    logging.captureStandardOutput LogLevel.INFO // suppress "## warnings" message
    options.encoding = "UTF-8"
    options.charSet = 'UTF-8'
}

artifacts {
    archives javadocJar, sourcesJar
}