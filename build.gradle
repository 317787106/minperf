plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'maven-publish'
}

group = 'io.github.317787106'
version = '0.1'

def jarName = 'minperf'

mainClassName = 'org.minperf.hash.HashPerformanceTest'

repositories {
    mavenLocal()
    maven {
        url "https://cdn.lfrs.sl/repository.liferay.com/nexus/content/groups/public"
    }
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

dependencies {
    testImplementation 'junit:junit:4.13.1'
}

shadowJar {
    archiveBaseName.set(jarName)
    archiveClassifier.set('')
    archiveVersion.set('')
    mergeServiceFiles()
}

tasks.build {
    dependsOn shadowJar
}

tasks.named('jar') {
    enabled = false
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId = project.group
            artifactId = 'minperf'
            version = project.version

            pom {
                name = 'minperf'
                description = 'A minimal perfect hash function implementation'
                url = 'https://github.com/317787106/minperf'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        name = 'The Tron Protocol'
                        email = '317787106@qq.com'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/317787106/minperf.git'
                    developerConnection = 'scm:git:ssh://github.com/317787106/minperf.git'
                    url = 'https://github.com/317787106/minperf'
                }
            }
        }
    }

    repositories {
        mavenLocal()
    }
}
